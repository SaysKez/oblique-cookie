/* Basic body styling. */

body {
    font-family: 'Open Sans', 'Helvetica Neue', 'Helvetica', sans-serif;
	}

	h1 {
    font-family: 'Black Han Sans', sans-serif;
	-webkit-text-stroke-color: #D80E0E;
	text-stroke-color: #D80E0E;
	-webkit-text-stroke-width: 0.5px;
	text-stroke-width: 0.5px;
	color: #fff;
	font-size: 3em;
	}

	h2 {
	font-family: 'East Sea Dokdo', cursive;
	font-size: 2em;
	color: #D80E0E;
	}

	h1, h2 {
		display: block;
		margin: auto;
		text-align: center;
		width: 80%;
	}


	/* Button */
	button {
	display: block;
	margin: auto;
	border: 3px solid #D80E0E;
	background-color: #D80E0E;
	color: #fff;
	padding: 0.35em 1.2em;
	font-size: 1em;
	cursor: pointer;
	outline: none;
	position: relative;
	overflow: hidden;

	-webkit-transition: all 0.3s;
	-moz-transition: all 0.3s;
	transition: all 0.3s;
}

button:after {
	content: '';
	position: absolute;
	-webkit-transition: all 0.3s;
	-moz-transition: all 0.3s;
	transition: all 0.3s;

	width: 100%;
	height: 0;
	top: 50%;
	left: 50%;
	background: #fff;
	opacity: 0;
	-webkit-transform: translateX(-50%) translateY(-50%) rotate(45deg);
	-moz-transform: translateX(-50%) translateY(-50%) rotate(45deg);
	-ms-transform: translateX(-50%) translateY(-50%) rotate(45deg);
	transform: translateX(-50%) translateY(-50%) rotate(45deg);
}

button:hover,
button:active {
	color: #000;
}

button:hover:after, button:active:after {
	height: 500%;
	opacity: 1;
}

.button-text {
	position: relative;
	z-index: 100;
}

	#cookie-big {
		width: 100%;
		height: 95vh;
		margin: auto;
		position: relative;
	}

	.button-wrapper {
		position: absolute;
		width: 100%;
		left:0;
		bottom: 9.5em;
		z-index: 100;
	}



#cookie-small {
	display: none;
}



/* RESPONSIVE */
@media (max-width: 50em) {
	#cookie-big {
		display: none;
	}

	.button-wrapper {
		display: none;
	}

	#cookie-small {
		display: block;
	}

	#cookie-small svg {
		margin: 3em auto 0em auto;
		width: 100%;
		height: 80%;
	}

	p {
		display: block;
		color: #000;
		margin: 1em auto;
		width: 80%;
		line-height: 1.5em;
		padding: 1em;
		text-align: center;
		border: 1px solid #D80E0E;
	}

}



	/* The CSS for the fade in. */ 
	@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
	@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
	@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

	.fade-in {
	position: fixed !important;
	position: absolute;
	top:0;
	right:0;
	bottom:0;
	left:0;
	display: flex;
	display: -webkit-flex;
	justify-content: center;
	align-items: center;

	opacity:0;  /* Make things invisible upon start */
	-webkit-animation:fadeIn ease-in 1;  /* Call the keyframe named fadeIn, use animattion ease-in and repeat it only 1 time. */
	-moz-animation:fadeIn ease-in 1;
	animation:fadeIn ease-in 1;

	-webkit-animation-fill-mode:forwards;  /* This makes sure that after animation is done we remain at the last keyframe value (opacity: 1). */
	-moz-animation-fill-mode:forwards;
	animation-fill-mode:forwards;

	-webkit-animation-duration:1s;
	-moz-animation-duration:1s;
	animation-duration:1s;
	}